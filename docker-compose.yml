version: '3'
services:
  doc:
    build:
      context: .
      dockerfile: ./docker/app/blue.Dockerfile
    expose:
      - "8088"
    ports:
      - "8088:8088"
    #env_file:
    #  - ./.env.development
    volumes:
      - .:/usr/src/app
    #command: sh -c "http doc.apib"
    #command: sh -c "ls -l"
    # docker-compose run --rm doc http -b localhost:8088 doc.apib

  migrate:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    depends_on:
      - database
    volumes:
      - .:/usr/src/app
    command: sh migrate.sh

  database:
    image: postgres:11-alpine
    environment:
      POSTGRES_MULTIPLE_DATABASES: postgres_dev,postgres_test
      #POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    volumes:
      - ./docker/database/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh

  app_development:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    depends_on:
      - database
    expose:
      - "3000"
    ports:
      - "3000:3000"
    env_file:
      - ./.env.development
    volumes:
      - .:/usr/src/app
    command: sh -c "puma -p 3000"

  app_test:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    depends_on:
      - database
    env_file:
      - ./.env.test
    volumes:
      - .:/usr/src/app

  swagger:
    build:
      context: ./docker/swagger
      dockerfile: Dockerfile
    ports:
      - "80:8080"
